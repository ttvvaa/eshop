@model EstimateShippingModel
@using Nop.Web.Models.ShoppingCart;
@if (Model.Enabled)
{
    <div class="shipping">
        <script type="text/javascript">
            $(function() {
                $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                    var selectedItem = $(this).val();
                    var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                    var estimateProgress = $("#estimate-shipping-loading-progress");
                    estimateProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "false" },
                 success: function(data) {
                     ddlStates.html('');
                     $.each(data, function(id, option) {
                         ddlStates.append($('<option></option>').val(option.id).html(option.name));
                     });
                     estimateProgress.hide();
                 },
                 error: function(xhr, ajaxOptions, thrownError) {
                     alert('Failed to retrieve states.');
                     estimateProgress.hide();
                 }
             });
                });
            });
        </script>

        <div class="estimate-shipping form-horizontal col-md-12">
            <div class="title">
                <strong>@T("ShoppingCart.EstimateShipping")</strong>
            </div>
            <div class="hint">@T("ShoppingCart.EstimateShipping.Tooltip")</div>
            <div class="shipping-options">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, new { @class = "control-label" })

                        <span class="required">*</span>
                        @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { @class = "country-input form-control" })


                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StateProvinceId, new { @class = "control-label" })
                        <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                        @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "state-input form-control" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipPostalCode, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "zip-input form-control" })
                    </div>
                    <div class="form-group">

                        <input type="submit" name="estimateshipping" value="@T("ShoppingCart.EstimateShipping.Button")" class="btn btn-default estimate-shipping-button" />

                    </div>
                </div>
            </div>

            @if (Model.ShippingOptions.Count > 0)
            {
                <ul class="shipping-results">
                    @foreach (var shippingOption in Model.ShippingOptions)
                    {
                        <li class="shipping-option-item">
                            <strong class="option-name">
                                @T("ShoppingCart.EstimateShipping.ShippingOptionWithRate", shippingOption.Name, shippingOption.Price)
                            </strong>
                            <span class="option-description">
                                @Html.Raw(shippingOption.Description)
                            </span>
                        </li>
                    }
                </ul>
            }
            else if (Model.Warnings.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var error in Model.Warnings)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
}
